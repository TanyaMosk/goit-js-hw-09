{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,wBACpCI,QAASL,SAASC,cAAc,iBAG1BK,EAAuCR,EAAvCI,WAAYK,EAA2BT,EAA3BK,UAAWK,EAAgBV,EAAhBM,YA+B/B,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAGpBA,E,IAxCPb,EAAKO,QAAQc,iBAAiB,SAG9B,SAAwBC,GACtBA,EAAIC,iBAOJ,IAL4C,IAAtCC,EAAQC,OAAOjB,EAAWkB,OAC1BC,EAAQF,OAAOhB,EAAUiB,OACzBE,EAASH,OAAOf,EAAYgB,OAGzBG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CAInClB,EAAckB,EAFUL,GAASK,EAAI,GAAKF,GAGvCG,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAAlC,GAASmC,OAAOC,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAGjDuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAAlC,GAASmC,OAAOI,QACd,sBAAuCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,QAtBvDX,SAASoC,KAAKC,MAAMC,gBAAkB,S","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'), \n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n  formBtn: document.querySelector('.form button'),\n};\n// Деструктуризація змінних \nconst { inputDelay, inputStep, inputAmount } = refs;\n\nrefs.formBtn.addEventListener('click', onFormBtnClick);\ndocument.body.style.backgroundColor = '#303238';\n\nfunction onFormBtnClick(evt) {\n  evt.preventDefault();\n  // зчитуємо значення полів input та перетворюємо їх на число\n  const delay = Number(inputDelay.value);\n  const steps = Number(inputStep.value);\n  const amount = Number(inputAmount.value);\n  // console.log(delay, steps, amount);\n\n  for (let i = 1; i <= amount; i += 1) {\n    //генер. послід. значень затримки promise\n    const delayValueGener = delay + (i - 1) * steps;\n    \n    createPromise(i, delayValueGener)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        // Fulfill\n      } else {\n        reject({ position, delay });\n        // Reject\n      }\n    }, delay);\n  });\n}\n\n// Інший варіант onFormBtnClick\n// \n// function onFormBtnClick(evt) {\n//   evt.preventDefault();\n//   const delay = Number(inputDelay.value);\n//   const steps = Number(inputStep.value);\n//   const amount = Number(inputAmount.value);\n\n//   const promises = [];\n\n//   // Створення масиву Promise\n//   Array.from({ length: amount }, (_, index) => index + 1).forEach(position => {\n//     const promise = createPromise(position, delay + (position - 1) * steps);\n//     promises.push(promise);\n//   });\n\n//   // Обробка кожного Promise\n//   promises.forEach(promise => {\n//     promise\n//       .then(({ position, delay }) => {\n//         Notiflix.Notify.success(\n//           `✅ Fulfilled promise ${position} in ${delay}ms`\n//         );\n//       })\n//       .catch(({ position, delay }) => {\n//         Notiflix.Notify.failure(\n//           `❌ Rejected promise ${position} in ${delay}ms`\n//         );\n//       });\n//   });\n// }"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","inputDelay","inputStep","inputAmount","formBtn","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","delay1","Number","value","steps","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","body","style","backgroundColor"],"version":3,"file":"03-promises.43da6dc1.js.map"}